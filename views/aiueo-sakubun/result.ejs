<head>
  <link rel="stylesheet" href="/assets/styles/result.css">
</head>
<body class="result-background">
<h1>採点結果</h1>
  <!-- 採点結果表示エリア -->
  <div id="resultCard" class="result-card">
    <div id="resultDisplay"></div>
    <div id="resultIcon" class="result-icon"></div>
    <div id="resultImage" class="result-image"></div>
  </div>
  <button onclick="onRestart()">もう一度挑戦する</button>

<script>
  // localStorageからデータを取得
  const data = localStorage.getItem("aiueoData");
  if (!data) {
    document.getElementById("resultDisplay").innerHTML = "<p>データが見つかりません。もう一度お試しください。</p>";
  }

  const formData = JSON.parse(data);
  const topic = formData.topic;
  const topicYomi = formData.topicYomi;
  const inputs = formData.inputs;

  // お題の表示
  const resultDiv = document.getElementById("resultDisplay");
  resultDiv.innerHTML = "<p>お題: " + topic + "</p>";

  // 作成した文章の表示（例として、各文字と入力内容を表示）
  resultDiv.innerHTML += "<h2>あなたの作文</h2>";
  for (let i = 0; i < topicYomi.length; i++) {
    resultDiv.innerHTML += "<p>" + topicYomi[i] + "： " + inputs[i] + "</p>";
  }
  displayResult();

  // 「もう一度挑戦する」ボタン押下時の処理
  function onRestart() {
    localStorage.removeItem("aiueoData");
    window.location.href = "input"
  }

  async function displayResult() {
    const fetchedData = await fetchScore(topic, inputs);
    const score = await fetchedData.json();
    //console.log(score);
    if (score === null) {
      console.log("Score is null, unable to display result.");
      return;
    }

    const keys = Object.keys(score);
    const values = Object.values(score);
   // console.log(values)
    // 結果表示エリアに結果を表示
    const resultIconDiv = document.getElementById("resultIcon");
    for (let i = 0; i < keys.length; i++) {

      const result = values[i].slice(1, -1).split(',');

      const [scoreArray, comment] = [result.slice(0, -1), result[result.length - 1]];

      const numericArray = scoreArray
      .map(item => Number(item)) // 数値に変換
      .filter(item => !isNaN(item)); // 数値以外を除外

      // 数値がない場合は null を返す
      if (numericArray.length === 0) return null;
      //console.log(scoreArray);
      // 点数の平均値を計算
      const averageValueFn = (numberArray) => numberArray.reduce((acc, current) => acc + current, 0) / numberArray.length;
      const averageValue = averageValueFn(numericArray);

      // 点数の表示
      resultDiv.innerHTML += keys[i] + "の結果：";
      resultDiv.innerHTML += Math.floor(averageValue) + "点　";

      resultDiv.innerHTML += `<p>${comment.replace(/'/g, '')}</p>`;

      // 点数に応じたアイコンと背景イラストの表示
      const resultIconDiv = document.getElementById("resultIcon");
      const resultImageDiv = document.getElementById("resultImage");
      if (score >= 70) {
        resultIconDiv.innerHTML += "😊";  // 人間のマーク
        resultImageDiv.innerHTML += '<img src="/assets/images/happy.png" alt="高得点イメージ">';
        resultImageDiv.innerHTML += '<img src="/assets/images/congratulations.png" alt="おめでとうイラスト">';
      } else if (score <= 40) {
        resultIconDiv.innerHTML = "🤖";  // AIのマーク
        resultImageDiv.innerHTML = '<img src="/assets/images/ai.png" alt="低得点イメージ">';
        resultImageDiv.innerHTML += '<img src="/assets/images/sorry.png" alt="残念イラスト">';
      } else {
        resultIconDiv.innerHTML += "😐";
      }
    }
  }

  async function fetchScore(topic, inputs) {
    const bodyData = {
      topic: topic,
      text: inputs
    }

    try {
      const response = await fetch('/api/v1/score', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(bodyData)
      });
      return response;
      if (!response) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }
    } catch (e) {
      console.error("Failed to fetch data", e);
    }
  }
</script>

<%- contentFor("css") %>
<link rel="stylesheet" href="/styles/result.css">
