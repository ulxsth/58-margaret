<head>
  <link rel="stylesheet" href="/assets/styles/global.css">
</head>
<h1>あいうえお作文 ゲーム</h1>
  <!-- お題表示エリア -->
  <div id="topicDisplay"></div>

  <!-- 入力フォーム -->
  <form id="aiueoForm">
    <div id="inputFields"></div>
    <button type="button" onclick="submitForm()">送信</button>
  </form>

  <div class="security-icon">🔒</div>

  <script>
    // 事前に用意したお題のリスト
    //const topics = ["あいす", "ねこ", "うみ", "たまご", "さくら"];

    // ランダムにお題を選ぶ
    //const topic = topics[Math.floor(Math.random() * topics.length)];
    const topic = "<%= (data.japanese[0].word && data.japanese[0].word.trim() !== '') ? data.japanese[0].word : data.japanese[0].reading %>"
    // 選んだお題を表示する
    document.getElementById("topicDisplay").innerHTML = "<p>お題: " + topic + "</p>";

    // お題の各文字に対応する入力欄を作成する
    const inputFieldsDiv = document.getElementById("inputFields");
    for (let i = 0; i < topic.length; i++) {
      const char = topic[i];

      // ラベル作成
      const label = document.createElement("label");
      label.textContent = char + "：";

      // 入力欄作成
      const input = document.createElement("input");
      input.type = "text";
      input.id = "input" + i;
      input.name = "input" + i;

      // 入力欄とラベルをフォームに追加
      inputFieldsDiv.appendChild(label);
      inputFieldsDiv.appendChild(input);
      inputFieldsDiv.appendChild(document.createElement("br"));
    }

    // 送信ボタン押下時の処理
    async function submitForm() {
      // 入力された内容を配列に格納
      const inputs = [];
      for (let i = 0; i < topic.length; i++) {
        const inputVal = document.getElementById("input" + i).value;
        if (!inputVal || !inputVal.trim()) {
          alert("すべての入力を記入してください");
          return; // 入力が空または空白の場合、処理を中断する
        }

        // 各行が指定された文字から始まっているかをチェック
        // TODO: baseUrl に差し替え
        const response = await fetch('http://localhost:8080/api/v1/starts-with', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ text: inputVal, prefix: topic.charAt(i) })
        });
        const result = await response.json();
        console.log(result);
        

        if (!result) {
          alert(`入力が「${topic.charAt(i)}」から始まっていません: ${inputVal}`);
          return; // 入力が指定された文字から始まっていない場合、処理を中断する
        }

        inputs.push(inputVal);
      }

      // 保存するデータをオブジェクトにまとめる
      const formData = {
        topic: topic,
        inputs: inputs
      };

      // localStorageにJSON文字列として保存
      localStorage.setItem("aiueoData", JSON.stringify(formData));

      // 結果ページに遷移
      window.location.href = `/aiueo-sakubun/result`;
    }
  </script>

<%- contentFor("css") %>
<link rel="stylesheet" href="/styles/input.css">